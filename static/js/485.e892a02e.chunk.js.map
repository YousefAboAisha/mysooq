{"version":3,"file":"static/js/485.e892a02e.chunk.js","mappings":"+KAMMA,EAAOC,EAAAA,GAAAA,IAAH,mnBA8DV,IA9Ba,SAAC,GAAc,IAAZC,EAAW,EAAXA,KAERC,IADSC,EAAAA,EAAAA,MAAPC,IACSC,EAAAA,EAAAA,OAMjB,OACE,SAAC,KAAD,CAAMC,MAAI,EAACC,GAAI,EAAGC,GAAI,EAAGC,GAAI,EAAGC,GAAI,GAApC,UACE,UAACX,EAAD,YACE,gBACEY,QAAS,kBARI,SAACP,GACpBF,EAAS,QAAD,OAASE,IAOIQ,CAAaX,EAAKG,KACjCS,IAAKC,EACLC,IAAK,MACLC,MAAM,OACNC,OAAQ,MACRC,MAAO,CACLC,UAAW,QACXC,eAAgB,UAChBC,aAAc,OACdC,OAAQ,cAGZ,0BAAOrB,EAAKsB,c,iEC3DdC,EAAMxB,EAAAA,GAAAA,OAAH,4TAwBT,IARmB,SAAC,GAAoC,IAAlCyB,EAAiC,EAAjCA,MAAOC,EAA0B,EAA1BA,KAAMC,EAAoB,EAApBA,QAASC,EAAW,EAAXA,KAC1C,OACE,SAACJ,EAAD,CAAKb,QAAS,kBAAMgB,EAAQC,EAAO,IAAIF,KAAMA,GAAc,SAA3D,SACGD,M,iECnBDI,EAAO7B,EAAAA,GAAAA,GAAH,wTAsBV,IAJgB,SAAC,GAAe,IAAbyB,EAAY,EAAZA,MACjB,OAAO,SAACI,EAAD,UAAOJ,M,qIChBVK,EAAS9B,EAAAA,GAAAA,IAAH,6OAYNwB,EAAMxB,EAAAA,GAAAA,OAAH,0ZAoHT,IA9FmB,SAAC,GAAgD,IAA9CI,EAA6C,EAA7CA,GAAI2B,EAAyC,EAAzCA,WAAYC,EAA6B,EAA7BA,QAASC,EAAoB,EAApBA,QAASC,EAAW,EAAXA,KAChDC,EAAG,UAAMC,EAAAA,EAAN,kDAAwDhC,GACjE,GAAgCiC,EAAAA,EAAAA,UAAS,IAAzC,eAAOC,EAAP,KAAiBC,EAAjB,KACA,GAAkCF,EAAAA,EAAAA,UAAS,IAA3C,eAAOG,EAAP,KAAkBC,EAAlB,KACA,GAA4BJ,EAAAA,EAAAA,UAAS,IAArC,eAAOK,EAAP,KAAeC,EAAf,KAEMC,EAAS,mCAAG,sGACOC,MAAMV,GADb,cACVW,EADU,gBAEKA,EAASC,OAFd,QAEVC,EAFU,SAGJT,EAAYS,EAAOC,KAAP,SAHR,2CAAH,sDAMfC,EAAAA,EAAAA,YAAU,WACRN,MACC,IAEH,IAAMO,EAAU,UAAMf,EAAAA,EAAN,oBACVgB,EAAO,UAAMhB,EAAAA,EAAN,gDAAsDH,GAG7DoB,EAAkB,mCAAG,sGACFR,MAAMM,GADJ,cACnBL,EADmB,gBAEJA,EAASC,OAFL,QAEnBC,EAFmB,SAGbP,EAAaO,EAAOC,KAAP,SAHA,2CAAH,qDAMlBK,EAAe,mCAAG,sGACCT,MAAMO,GADP,cAChBN,EADgB,gBAEDA,EAASC,OAFR,QAEhBC,EAFgB,SAGVL,EAAUK,EAAOC,KAAP,SAHA,2CAAH,qDAWrB,OALAC,EAAAA,EAAAA,YAAU,WACRG,IACAC,MACC,CAACrB,KAGF,SAAC,KAAD,CAAM3B,MAAI,EAACC,GAAI,GAAIgD,GAAI,EAAvB,UACE,UAACzB,EAAD,YACE,SAAC,KAAD,WACE,+BACE,mBAAQ0B,MAAM,GAAGC,UAAQ,EAACC,UAAQ,EAACC,QAAM,EAAzC,mGAGCrB,EAASsB,KAAI,SAACC,EAAMC,GACnB,OACE,mBAAoBN,MAAOK,EAAKzD,GAAhC,SACGyD,EAAKpC,OADKqC,YAOrB,SAAC,KAAD,WACE,oBACEC,YAAY,uCACZC,SAAU,SAACC,GAAD,OAAOlC,EAAWkC,EAAEC,OAAOV,QACrCA,MAAOvB,EAHT,WAKE,mBAAQuB,MAAM,GAAGC,UAAQ,EAACC,UAAQ,EAACC,QAAM,EAAzC,kDAICnB,EAAUoB,KAAI,SAACO,EAASL,GACvB,OACE,mBAAQN,MAAOW,EAAQ/D,GAAvB,SACG+D,EAAQ5C,MADqBuC,YAOxC,SAAC,KAAD,WACE,oBAAQE,SAAU,SAACC,GAAD,OAAOjC,EAAQiC,EAAEC,OAAOV,QAAQA,MAAOtB,EAAzD,WACE,mBAAQsB,MAAM,GAAGC,UAAQ,EAACC,UAAQ,EAACC,QAAM,EAAzC,wDAGCjB,EAAOkB,KAAI,SAACQ,EAAMN,GACjB,OACE,mBAAQN,MAAOY,EAAKhE,GAApB,SACGgE,EAAKC,UADqBP,YAQrC,SAACtC,EAAD,wC,iEC7HF8C,EAAatE,EAAAA,GAAAA,KAAH,+EAgBhB,IAXkB,SAAC,GAAe,IAAbyB,EAAY,EAAZA,MACnB,OACE,4BACE,SAAC6C,EAAD,CAAYpD,MAAO,CAAEqD,WAAY,MAAOC,WAAY,OAApD,gEAGA,SAACF,EAAD,CAAYpD,MAAO,CAAEuD,MAAO,WAA5B,SAA0ChD,S,6LCF1CiD,EAAU1E,EAAAA,GAAAA,IAAH,sEAsFb,UAjFiB,WACf,IACA,GAAwBqC,EAAAA,EAAAA,UAAS,IAAjC,eAAasC,GAAb,WACA,GAA8BtC,EAAAA,EAAAA,UAAS,MAAvC,eAAOJ,EAAP,KAAgBF,EAAhB,KACA,GAAwBM,EAAAA,EAAAA,UAAS,MAAjC,eAAOH,EAAP,KAAaF,EAAb,KACA,GAAwBK,EAAAA,EAAAA,UAAS,GAAjC,eAAOuC,EAAP,KAAajD,EAAb,KACA,GAA8BU,EAAAA,EAAAA,WAAS,GAAvC,eAAOwC,EAAP,KAAgBC,EAAhB,KACA,GAA8BzC,EAAAA,EAAAA,UAAS,IAAvC,eAAO0C,EAAP,KAAgBC,EAAhB,KA8BA,OAJA9B,EAAAA,EAAAA,YAAU,WAvBR4B,GAAW,GACXG,IAAAA,IAAA,UAEO7C,EAAAA,EAFP,oCAE2CwC,EAF3C,sBAE6D3C,EAF7D,mBAE+EC,EAF/E,sBAVS,IAcNgD,MAAK,SAACC,GAGL,IAAMC,EAAc,GACpB,IAAK,IAAIC,KAAOF,EAAIlC,KAAKA,KAAT,QACdmC,EAAYE,KAAKH,EAAIlC,KAAKA,KAAKsC,QAAQF,IAEzCV,EAAQS,GACRJ,EAAW,GAAD,eAAKD,GAAYK,IAE3BN,GAAW,MAEZU,OAAM,SAACC,GACNC,QAAQC,IAAIF,GACZX,GAAW,QAMd,CAAC7C,EAASC,EAAM0C,KAGjB,UAACF,EAAD,YACE,SAAC,IAAD,CAAWjD,MAAO,oCAElB,SAAC,IAAD,CACErB,GAzCK,EA0CL2B,WAAYA,EACZC,QAASA,EACTL,QAASA,EACTM,QAASA,EACTC,KAAMA,KAER,SAAC,KAAD,CAAM5B,MAAI,EAACC,GAAI,GAAIgD,GAAI,EAAGqC,GAAI,EAA9B,UACE,SAAC,IAAD,CAASnE,MAAO,uFAGlB,SAAC,KAAD,CACEoE,WAAS,EACTC,WAAY,EACZC,cAAe,EACfC,GAAI,EACJC,UAAW,QALb,SAOGpB,GACC,SAAC,IAAD,IAEAE,EAAQnB,KAAI,SAACC,EAAMC,GACjB,OAAO,SAAC,IAAD,CAAkB7D,KAAM4D,GAAbC,SAIxB,SAAC,KAAD,CACE+B,WAAS,EACTK,UAAU,MACVC,eAAe,SACfC,WAAW,SACXC,EAAG,EALL,UAOE,SAAC,IAAD,CAAY5E,MAAO,sEAAgBE,QAASA,EAASC,KAAMgD,W","sources":["Components/AddCard/addCard.js","Components/BlueButton/blueButton.js","Components/Heading/heading.js","Components/PageHeader/pageHeader.js","Components/PageTitle/pageTitle.js","Containers/Services/services.js"],"sourcesContent":["import React from \"react\";\r\nimport styled from \"styled-components\";\r\nimport { Grid } from \"@mui/material\";\r\nimport add from \"../../Media/cardAdd.png\";\r\nimport { useParams, useNavigate } from \"react-router-dom\";\r\n\r\nconst Item = styled.div`\r\n  position: relative;\r\n  max-height: 400px;\r\n  max-width: 340px;\r\n  margin: 0 auto;\r\n  transition: all 0.5s linear;\r\n  &:hover {\r\n    box-shadow: 1px 1px 15px #9e9e9e;\r\n    transform: scale(1.008);\r\n    transition: all 0.5s linear;\r\n  }\r\n  border-radius: 10px;\r\n\r\n  &:hover span {\r\n    opacity: 1;\r\n    transition: all 0.3s ease-in-out;\r\n  }\r\n\r\n  & span {\r\n    position: absolute;\r\n    width: 100%;\r\n    right: 0;\r\n    bottom: -2px;\r\n    background: rgba(0, 0, 0, 0.7);\r\n    color: #fff;\r\n    padding: 10px;\r\n    border-radius: 0 0 7px 7px;\r\n    opacity: 0;\r\n    transition: all 0.3s ease-in-out;\r\n  }\r\n`;\r\n\r\nconst Card = ({ card }) => {\r\n  const { id } = useParams();\r\n  const navigate = useNavigate();\r\n\r\n  const clickHandler = (id) => {\r\n    navigate(`/add/${id}`);\r\n  };\r\n\r\n  return (\r\n    <Grid item lg={3} md={4} sm={6} xs={12}>\r\n      <Item>\r\n        <img\r\n          onClick={() => clickHandler(card.id)}\r\n          src={add}\r\n          alt={\"add\"}\r\n          width=\"100%\"\r\n          height={\"402\"}\r\n          style={{\r\n            objectFit: \"cover\",\r\n            objectPosition: \"50% 50%\",\r\n            borderRadius: \"10px\",\r\n            cursor: \"pointer\",\r\n          }}\r\n        />\r\n        <span>{card.name}</span>\r\n      </Item>\r\n    </Grid>\r\n  );\r\n};\r\n\r\nexport default Card;\r\n","import React from \"react\";\r\nimport styled from \"styled-components\";\r\n\r\nconst Btn = styled.button`\r\n  padding: 6px;\r\n  min-width: 110px;\r\n  color: var(--white);\r\n  background-color: var(--blue);\r\n  border-radius: 3px;\r\n  font-family: var(--secondFont);\r\n  font-size: 14px;\r\n  transition: all 0.2s linear;\r\n\r\n  &:hover {\r\n    background-color: #01687d;\r\n    transition: all 0.2s linear;\r\n  }\r\n`;\r\n\r\nconst BlueButton = ({ title, type, setPage, page }) => {\r\n  return (\r\n    <Btn onClick={() => setPage(page + 1)} type={type ? type : \"button\"}>\r\n      {title}\r\n    </Btn>\r\n  );\r\n};\r\n\r\nexport default BlueButton;\r\n","import React from \"react\";\r\nimport styled from \"styled-components\";\r\n\r\nconst Head = styled.h3`\r\n  position: relative;\r\n  font-weight: 600;\r\n  width: fit-content;\r\n  margin-bottom: 15px;\r\n\r\n  &::after {\r\n    content: \"\";\r\n    position: absolute;\r\n    bottom: -3px;\r\n    background-color: #000;\r\n    width: 70%;\r\n    left: 50%;\r\n    transform: translateX(-50%);\r\n    height: 2px;\r\n  }\r\n`;\r\n\r\nconst Heading = ({ title }) => {\r\n  return <Head>{title}</Head>;\r\n};\r\n\r\nexport default Heading;\r\n","import { Grid } from \"@mui/material\";\r\nimport React, { useState, useEffect } from \"react\";\r\nimport styled from \"styled-components\";\r\nimport { Box } from \"../../Containers/NewAdd/addForm/form\";\r\nimport { BASE_URL } from \"../../baseURL\";\r\n\r\nconst Header = styled.div`\r\n  position: relative;\r\n  padding: 10px 5px;\r\n  display: flex;\r\n  justify-content: space-between;\r\n  align-items: center;\r\n  flex-flow: row nowrap;\r\n  gap: 10px;\r\n  background-color: var(--white);\r\n  width: 100%;\r\n`;\r\n\r\nconst Btn = styled.button`\r\n  padding: 6px;\r\n  min-width: 110px;\r\n  color: var(--white);\r\n  background-color: var(--blue);\r\n  border-radius: 3px;\r\n  font-family: var(--secondFont);\r\n  font-size: 14px;\r\n  transition: all 0.2s linear;\r\n\r\n  &:hover {\r\n    background-color: #01687d;\r\n    transition: all 0.2s linear;\r\n  }\r\n\r\n  @media only screen and (max-width: 600px) {\r\n    & {\r\n      min-width: 50px;\r\n    }\r\n  }\r\n`;\r\n\r\nconst PageHeader = ({ id, setCountry, setCity, Country, City }) => {\r\n  const URL = `${BASE_URL}SubTupe/GetAllForService?siteServiceID=${id}`;\r\n  const [Subtypes, setSubtypes] = useState([]);\r\n  const [Countries, setCountries] = useState([]);\r\n  const [Cities, setCities] = useState([]);\r\n\r\n  const fetchData = async () => {\r\n    const response = await fetch(URL);\r\n    const result = await response.json();\r\n    if (result) setSubtypes(result.data[\"$values\"]);\r\n  };\r\n\r\n  useEffect(() => {\r\n    fetchData();\r\n  }, []);\r\n\r\n  const countryURL = `${BASE_URL}Countries/GetAll`;\r\n  const cityURL = `${BASE_URL}Cities/GetAllForOneCountry?countryId=${Country}`;\r\n\r\n  // Fetching Countries\r\n  const fetchCountriesData = async () => {\r\n    const response = await fetch(countryURL);\r\n    const result = await response.json();\r\n    if (result) setCountries(result.data[\"$values\"]);\r\n  };\r\n\r\n  const fetchCitiesData = async () => {\r\n    const response = await fetch(cityURL);\r\n    const result = await response.json();\r\n    if (result) setCities(result.data[\"$values\"]);\r\n  };\r\n\r\n  useEffect(() => {\r\n    fetchCountriesData();\r\n    fetchCitiesData();\r\n  }, [Country]);\r\n\r\n  return (\r\n    <Grid item lg={12} mt={3}>\r\n      <Header>\r\n        <Box>\r\n          <select>\r\n            <option value=\"\" selected disabled hidden>\r\n              الأقسام الفرعية\r\n            </option>\r\n            {Subtypes.map((elem, index) => {\r\n              return (\r\n                <option key={index} value={elem.id}>\r\n                  {elem.title}\r\n                </option>\r\n              );\r\n            })}\r\n          </select>\r\n        </Box>\r\n        <Box>\r\n          <select\r\n            placeholder=\"الدولة\"\r\n            onChange={(e) => setCountry(e.target.value)}\r\n            value={Country}\r\n          >\r\n            <option value=\"\" selected disabled hidden>\r\n              الدولة\r\n            </option>\r\n\r\n            {Countries.map((country, index) => {\r\n              return (\r\n                <option value={country.id} key={index}>\r\n                  {country.name}\r\n                </option>\r\n              );\r\n            })}\r\n          </select>\r\n        </Box>\r\n        <Box>\r\n          <select onChange={(e) => setCity(e.target.value)} value={City}>\r\n            <option value=\"\" selected disabled hidden>\r\n              المدينة\r\n            </option>\r\n            {Cities.map((city, index) => {\r\n              return (\r\n                <option value={city.id} key={index}>\r\n                  {city.cityName}\r\n                </option>\r\n              );\r\n            })}\r\n          </select>\r\n        </Box>\r\n\r\n        <Btn>بحث</Btn>\r\n      </Header>\r\n    </Grid>\r\n  );\r\n};\r\n\r\nexport default PageHeader;\r\n","import React from \"react\";\r\nimport styled from \"styled-components\";\r\n\r\nconst StyledSpan = styled.span`\r\n  font-size: 18px;\r\n  font-family: var(--secondFont);\r\n`;\r\n\r\nconst PageTitle = ({ title }) => {\r\n  return (\r\n    <div>\r\n      <StyledSpan style={{ fontWeight: \"600\", marginLeft: \"5px\" }}>\r\n        الرئيسية/\r\n      </StyledSpan>\r\n      <StyledSpan style={{ color: \"#707070\" }}>{title}</StyledSpan>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default PageTitle;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport styled from \"styled-components\";\r\nimport PageTitle from \"../../Components/PageTitle/pageTitle\";\r\nimport PageHeader from \"../../Components/PageHeader/pageHeader\";\r\nimport { Grid } from \"@mui/material\";\r\nimport Heading from \"../../Components/Heading/heading\";\r\nimport { BASE_URL } from \"../../baseURL\";\r\nimport Spinner from \"../../Components/Spinner/Spinner\";\r\nimport Card from \"../../Components/AddCard/addCard\";\r\nimport axios from \"axios\";\r\nimport BlueButton from \"../../Components/BlueButton/blueButton\";\r\n\r\nconst Wrapper = styled.div`\r\n  position: relative;\r\n  min-height: 1000px;\r\n`;\r\n\r\nconst Services = () => {\r\n  const id = 2;\r\n  const [Adds, setAdds] = useState([]);\r\n  const [Country, setCountry] = useState(null);\r\n  const [City, setCity] = useState(null);\r\n  const [Page, setPage] = useState(0);\r\n  const [Loading, setLoading] = useState(false);\r\n  const [AllAdds, setAllAdds] = useState([]);\r\n\r\n  const fetchData = () => {\r\n    setLoading(true);\r\n    axios\r\n      .get(\r\n        `${BASE_URL}Business/GetLatest?&page=${Page}&countryId=${Country}&cityId=${City}&serviceId=${id}`\r\n      )\r\n      .then((res) => {\r\n        // console.log(res.data.data.$values);\r\n\r\n        const fetchedData = [];\r\n        for (let key in res.data.data[\"$values\"]) {\r\n          fetchedData.push(res.data.data.$values[key]);\r\n        }\r\n        setAdds(fetchedData);\r\n        setAllAdds([...AllAdds, ...fetchedData]);\r\n\r\n        setLoading(false);\r\n      })\r\n      .catch((error) => {\r\n        console.log(error);\r\n        setLoading(false);\r\n      });\r\n  };\r\n\r\n  useEffect(() => {\r\n    fetchData();\r\n  }, [Country, City, Page]);\r\n\r\n  return (\r\n    <Wrapper>\r\n      <PageTitle title={\"خدمات\"} />\r\n\r\n      <PageHeader\r\n        id={id}\r\n        setCountry={setCountry}\r\n        setCity={setCity}\r\n        setPage={setPage}\r\n        Country={Country}\r\n        City={City}\r\n      />\r\n      <Grid item lg={12} mt={5} mb={2}>\r\n        <Heading title={\"أحدث الإعلانات\"} />\r\n      </Grid>\r\n\r\n      <Grid\r\n        container\r\n        rowSpacing={2}\r\n        columnSpacing={2}\r\n        pr={0}\r\n        minHeight={\"400px\"}\r\n      >\r\n        {Loading ? (\r\n          <Spinner />\r\n        ) : (\r\n          AllAdds.map((elem, index) => {\r\n            return <Card key={index} card={elem} />;\r\n          })\r\n        )}\r\n      </Grid>\r\n      <Grid\r\n        container\r\n        direction=\"row\"\r\n        justifyContent=\"center\"\r\n        alignItems=\"center\"\r\n        m={3}\r\n      >\r\n        <BlueButton title={\"إظهار المزيد\"} setPage={setPage} page={Page} />\r\n      </Grid>\r\n    </Wrapper>\r\n  );\r\n};\r\n\r\nexport default Services;\r\n"],"names":["Item","styled","card","navigate","useParams","id","useNavigate","item","lg","md","sm","xs","onClick","clickHandler","src","add","alt","width","height","style","objectFit","objectPosition","borderRadius","cursor","name","Btn","title","type","setPage","page","Head","Header","setCountry","setCity","Country","City","URL","BASE_URL","useState","Subtypes","setSubtypes","Countries","setCountries","Cities","setCities","fetchData","fetch","response","json","result","data","useEffect","countryURL","cityURL","fetchCountriesData","fetchCitiesData","mt","value","selected","disabled","hidden","map","elem","index","placeholder","onChange","e","target","country","city","cityName","StyledSpan","fontWeight","marginLeft","color","Wrapper","setAdds","Page","Loading","setLoading","AllAdds","setAllAdds","axios","then","res","fetchedData","key","push","$values","catch","error","console","log","mb","container","rowSpacing","columnSpacing","pr","minHeight","direction","justifyContent","alignItems","m"],"sourceRoot":""}