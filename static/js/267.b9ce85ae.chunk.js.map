{"version":3,"file":"static/js/267.b9ce85ae.chunk.js","mappings":"qOASMA,EAAOC,EAAAA,GAAAA,IAAH,4xBAgDJC,EAAMD,EAAAA,GAAAA,OAAH,sXAkGT,UA/EmB,WACjB,OAAwBE,EAAAA,EAAAA,UAAS,IAAjC,eAAOC,EAAP,KAAaC,EAAb,KACA,GAAgCF,EAAAA,EAAAA,UAAS,IAAzC,eAAOG,EAAP,KAAiBC,EAAjB,KACA,GAA0BJ,EAAAA,EAAAA,UAAS,IAAnC,eAAOK,EAAP,KAAcC,EAAd,KACA,GAA8BN,EAAAA,EAAAA,WAAS,GAAvC,eAAOO,EAAP,KAAgBC,EAAhB,KACA,GAAoCR,EAAAA,EAAAA,UAAS,IAA7C,eAAOS,EAAP,KAAmBC,EAAnB,KACMC,GAAWC,EAAAA,EAAAA,MAkCjB,OACE,kBAAMC,SAjCa,SAACC,GACpBA,EAAEC,iBACFP,GAAW,GAEXQ,IAAAA,KAAA,UAEOC,EAAAA,EAFP,mCAE0ChB,EAF1C,wBAE8DE,GAC1D,IAEDe,MAAK,SAACC,IACiB,IAAlBA,EAAIC,KAAKA,MACXd,EAASa,EAAIC,KAAKC,SAClBb,GAAW,KAEXE,GAAc,GAEdY,YAAW,WACTZ,GAAc,KACb,KAEHF,GAAW,GACXc,YAAW,WACTX,EAAS,UACR,MAELY,QAAQC,IAAIL,EAAIC,SAEjBK,OAAM,SAACC,GACNH,QAAQC,IAAIE,OAKhB,UACGjB,GAAa,SAAC,IAAD,CAAUkB,IAAK,6IAAmC,KAE/DpB,GACC,SAAC,IAAD,KAEA,UAACV,EAAD,YACE,yJACA,4BACE,SAAC,KAAD,wEACA,kBACE+B,KAAM,OACNC,YAAY,0DACZC,SAAU,SAAChB,GAAD,OAAOZ,EAAQY,EAAEiB,OAAOC,QAClCA,MAAO/B,EACPgC,UAAQ,KAEV,iBAAMC,UAAU,QAAhB,SAAyB7B,QAG3B,4BACE,SAAC,KAAD,wHACA,kBACEuB,KAAM,WACNC,YAAY,mIACZC,SAAU,SAAChB,GAAD,OAAOV,EAAYU,EAAEiB,OAAOC,QACtCA,MAAO7B,EACP8B,UAAQ,QAIZ,SAAClC,EAAD","sources":["Containers/Signin/VerifyCode/verifyCode.js"],"sourcesContent":["import React, { useState } from \"react\";\r\nimport styled from \"styled-components\";\r\nimport { BoldSpan } from \"../../NewAdd/addForm/form\";\r\nimport axios from \"axios\";\r\nimport { BASE_URL } from \"../../../baseURL\";\r\nimport Snackbar from \"../../../Components/Snackbar/snackbar\";\r\nimport { useNavigate } from \"react-router\";\r\nimport Spinner from \"../../../Components/Spinner/Spinner\";\r\n\r\nconst Wrap = styled.div`\r\n  position: relative;\r\n  margin: 5em auto;\r\n  display: flex;\r\n  flex-flow: column wrap;\r\n  width: clamp(40%, 100%, 200px);\r\n  padding: 15px 20px;\r\n  gap: 18px;\r\n  background-color: #fff;\r\n  border-radius: 10px;\r\n  padding-bottom: 30px;\r\n  min-height: 300px;\r\n\r\n  & h2 {\r\n    text-align: center;\r\n    margin-bottom: 5px;\r\n  }\r\n\r\n  & div {\r\n    display: flex;\r\n    flex-flow: column wrap;\r\n    gap: 5px;\r\n  }\r\n\r\n  & span {\r\n    margin-bottom: 0;\r\n  }\r\n\r\n  & .error {\r\n    margin-top: -5px;\r\n    font-size: 12px;\r\n    font-weight: 600;\r\n    color: red;\r\n  }\r\n\r\n  @media only screen and (max-width: 800px) {\r\n    & {\r\n      width: 90%;\r\n    }\r\n  }\r\n\r\n  & input:focus {\r\n    width: clamp(350px, 60%);\r\n    border: 1px solid var(--blue);\r\n    transition: all 0.5s linear;\r\n  }\r\n`;\r\n\r\nconst Btn = styled.button`\r\n  display: block;\r\n  padding: 6px;\r\n  min-width: 110px;\r\n  color: var(--white);\r\n  background-color: var(--blue);\r\n  border-radius: 3px;\r\n  font-family: var(--secondFont);\r\n  font-size: 14px;\r\n  transition: all 0.2s linear;\r\n  margin: 10px auto;\r\n  width: 150px;\r\n\r\n  &:hover {\r\n    background-color: #01687d;\r\n    transition: all 0.2s linear;\r\n  }\r\n`;\r\n\r\nconst VerifyCode = () => {\r\n  const [Code, setCode] = useState(\"\");\r\n  const [Password, setPassword] = useState(\"\");\r\n  const [Error, setError] = useState(\"\");\r\n  const [Loading, setLoading] = useState(false);\r\n  const [SuccessMsg, setSuccessMsg] = useState(\"\");\r\n  const navigate = useNavigate();\r\n\r\n  const clickHandler = (e) => {\r\n    e.preventDefault();\r\n    setLoading(true);\r\n\r\n    axios\r\n      .post(\r\n        `${BASE_URL}User/ResetPassword?code=${Code}&newpassword=${Password}`,\r\n        {}\r\n      )\r\n      .then((res) => {\r\n        if (res.data.data === false) {\r\n          setError(res.data.message);\r\n          setLoading(false);\r\n        } else {\r\n          setSuccessMsg(true);\r\n\r\n          setTimeout(() => {\r\n            setSuccessMsg(false);\r\n          }, 4000);\r\n\r\n          setLoading(false);\r\n          setTimeout(() => {\r\n            navigate(\"code\");\r\n          }, 3000);\r\n        }\r\n        console.log(res.data);\r\n      })\r\n      .catch((error) => {\r\n        console.log(error);\r\n      });\r\n  };\r\n\r\n  return (\r\n    <form onSubmit={clickHandler}>\r\n      {SuccessMsg ? <Snackbar msg={\"تم تغيير كلمة المرور بنجاح\"} /> : null}\r\n\r\n      {Loading ? (\r\n        <Spinner />\r\n      ) : (\r\n        <Wrap>\r\n          <h2>إعادة تعيين كلمة المرور</h2>\r\n          <div>\r\n            <BoldSpan> كود التحقق</BoldSpan>\r\n            <input\r\n              type={\"text\"}\r\n              placeholder=\"كود التحقق\"\r\n              onChange={(e) => setCode(e.target.value)}\r\n              value={Code}\r\n              required\r\n            />\r\n            <span className=\"error\">{Error}</span>\r\n          </div>\r\n\r\n          <div>\r\n            <BoldSpan>كلمة المرور الجديدة</BoldSpan>\r\n            <input\r\n              type={\"password\"}\r\n              placeholder=\"أدخل كلمةالمرور الجديدة\"\r\n              onChange={(e) => setPassword(e.target.value)}\r\n              value={Password}\r\n              required\r\n            />\r\n          </div>\r\n\r\n          <Btn>تأكيد</Btn>\r\n        </Wrap>\r\n      )}\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default VerifyCode;\r\n"],"names":["Wrap","styled","Btn","useState","Code","setCode","Password","setPassword","Error","setError","Loading","setLoading","SuccessMsg","setSuccessMsg","navigate","useNavigate","onSubmit","e","preventDefault","axios","BASE_URL","then","res","data","message","setTimeout","console","log","catch","error","msg","type","placeholder","onChange","target","value","required","className"],"sourceRoot":""}