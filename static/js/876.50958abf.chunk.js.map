{"version":3,"file":"static/js/876.50958abf.chunk.js","mappings":"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","sources":["Components/AddCard/addCard.js","Components/BlueButton/blueButton.js","Components/Heading/heading.js","Components/PageTitle/pageTitle.js","Containers/CountriesAdds/countriesAdds.js"],"sourcesContent":["import React from \"react\";\r\nimport styled from \"styled-components\";\r\nimport { Grid } from \"@mui/material\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport { IMAGE_BASE_URL } from \"../../baseURL\";\r\n\r\nconst Item = styled.div`\r\n  position: relative;\r\n  height: 402px;\r\n  max-height: 402px;\r\n  max-width: 340px;\r\n  width: 300px;\r\n  margin: 0 auto;\r\n  transition: all 0.5s ease-in-out;\r\n  border: 1px solid #ddd;\r\n  cursor: pointer;\r\n\r\n  &:hover {\r\n    box-shadow: 1px 1px 2px #ddd;\r\n    transform: scale(1.008);\r\n    transition: all 0.5s ease-in-out;\r\n  }\r\n  border-radius: 10px;\r\n\r\n  &:hover span {\r\n    opacity: 1;\r\n    transition: all 0.3s ease-in-out;\r\n  }\r\n\r\n  & span {\r\n    position: absolute;\r\n    width: 100%;\r\n    right: 0;\r\n    bottom: -2px;\r\n    background: rgba(0, 0, 0, 0.7);\r\n    color: #fff;\r\n    padding: 10px;\r\n    border-radius: 0 0 7px 7px;\r\n    opacity: 0;\r\n    transition: all 0.3s ease-in-out;\r\n  }\r\n`;\r\n\r\nconst Card = ({ card }) => {\r\n  // const { id } = useParams();\r\n  const navigate = useNavigate();\r\n\r\n  const clickHandler = (id) => {\r\n    navigate(`/add/${id}`);\r\n  };\r\n\r\n  return (\r\n    <Grid item lg={3} md={4} sm={6} xs={12}>\r\n      <Item onClick={() => clickHandler(card.id)}>\r\n        <img\r\n          src={`${IMAGE_BASE_URL}${card.image}`}\r\n          alt={\"add\"}\r\n          width=\"100%\"\r\n          height={\"402\"}\r\n          style={{\r\n            objectFit: \"cover\",\r\n            objectPosition: \"50% 50%\",\r\n            borderRadius: \"10px\",\r\n            cursor: \"pointer\",\r\n          }}\r\n        />\r\n        <span>{card.name}</span>\r\n      </Item>\r\n    </Grid>\r\n  );\r\n};\r\n\r\nexport default Card;\r\n","import React from \"react\";\r\nimport styled from \"styled-components\";\r\n\r\nconst Btn = styled.button`\r\n  padding: 6px;\r\n  min-width: 110px;\r\n  color: var(--white);\r\n  background-color: var(--blue);\r\n  border-radius: 3px;\r\n  font-family: var(--secondFont);\r\n  font-size: 14px;\r\n  transition: all 0.2s linear;\r\n\r\n  &:hover {\r\n    background-color: #01687d;\r\n    transition: all 0.2s linear;\r\n  }\r\n`;\r\n\r\nconst BlueButton = ({ title, type, setPage, page }) => {\r\n  return (\r\n    <Btn onClick={() => setPage(page + 1)} type={type ? type : \"button\"}>\r\n      {title}\r\n    </Btn>\r\n  );\r\n};\r\n\r\nexport default BlueButton;\r\n","import React from \"react\";\r\nimport styled from \"styled-components\";\r\n\r\nconst Head = styled.h3`\r\n  position: relative;\r\n  font-weight: 600;\r\n  width: fit-content;\r\n  margin-bottom: 15px;\r\n\r\n  &::after {\r\n    content: \"\";\r\n    position: absolute;\r\n    bottom: -3px;\r\n    background-color: #000;\r\n    width: 70%;\r\n    left: 50%;\r\n    transform: translateX(-50%);\r\n    height: 2px;\r\n  }\r\n`;\r\n\r\nconst Heading = ({ title }) => {\r\n  return <Head>{title}</Head>;\r\n};\r\n\r\nexport default Heading;\r\n","import React from \"react\";\r\nimport styled from \"styled-components\";\r\n\r\nconst StyledSpan = styled.span`\r\n  font-size: 18px;\r\n  font-family: var(--secondFont);\r\n`;\r\n\r\nconst PageTitle = ({ title }) => {\r\n  return (\r\n    <div>\r\n      <StyledSpan style={{ fontWeight: \"600\", marginLeft: \"5px\" }}>\r\n        الرئيسية/\r\n      </StyledSpan>\r\n      <StyledSpan style={{ color: \"#707070\" }}>{title}</StyledSpan>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default PageTitle;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport styled from \"styled-components\";\r\nimport PageTitle from \"../../Components/PageTitle/pageTitle\";\r\nimport { BASE_URL } from \"../../baseURL\";\r\nimport { useParams } from \"react-router\";\r\nimport Card from \"../../Components/AddCard/addCard\";\r\nimport Spinner from \"../../Components/Spinner/Spinner\";\r\nimport { Grid } from \"@mui/material\";\r\nimport axios from \"axios\";\r\nimport BlueButton from \"../../Components/BlueButton/blueButton\";\r\nimport Heading from \"../../Components/Heading/heading\";\r\n\r\nconst Wrapper = styled.div`\r\n  position: relative;\r\n  min-height: 1000px;\r\n\r\n  & .inputs {\r\n    position: relative;\r\n    padding: 10px 5px;\r\n    display: flex;\r\n    justify-content: space-between;\r\n    align-items: center;\r\n    flex-flow: row nowrap;\r\n    gap: 10px;\r\n    background-color: var(--white);\r\n    width: 100%;\r\n    margin-top: 20px;\r\n\r\n    & select {\r\n      width: 100%;\r\n    }\r\n  }\r\n`;\r\n\r\nconst Btn = styled.button`\r\n  padding: 6px;\r\n  min-width: 110px;\r\n  color: var(--white);\r\n  background-color: var(--blue);\r\n  border-radius: 3px;\r\n  font-family: var(--secondFont);\r\n  font-size: 14px;\r\n  transition: all 0.2s linear;\r\n\r\n  &:hover {\r\n    background-color: #01687d;\r\n    transition: all 0.2s linear;\r\n  }\r\n\r\n  @media only screen and (max-width: 600px) {\r\n    & {\r\n      min-width: 50px;\r\n    }\r\n  }\r\n`;\r\n\r\nconst services = [\r\n  {\r\n    name: \"عقارات\",\r\n    id: 6,\r\n  },\r\n  {\r\n    name: \"سيارات\",\r\n    id: 8,\r\n  },\r\n  {\r\n    name: \"مصالح تجارية\",\r\n    id: 1,\r\n  },\r\n  {\r\n    name: \"خدمات\",\r\n    id: 2,\r\n  },\r\n  {\r\n    name: \"باحثين عن عمل\",\r\n    id: 4,\r\n  },\r\n  {\r\n    name: \"وظائف شاغرة\",\r\n    id: 5,\r\n  },\r\n];\r\n\r\nconst CountriesAdds = () => {\r\n  const [AddType, setAddType] = useState(\"\");\r\n  const [AddSubType, setAddSubType] = useState(\"\");\r\n  const [City, setCity] = useState(\"\");\r\n  const [Adds, setAdds] = useState([]);\r\n  const [Loading, setLoading] = useState(false);\r\n  const [Page, setPage] = useState(1);\r\n\r\n  const [Cities, setCities] = useState([]);\r\n  const [Subtypes, setSubtypes] = useState([]);\r\n\r\n  const { cID } = useParams();\r\n\r\n  const cityURL = `${BASE_URL}Cities/GetAllForOneCountry?countryId=${cID}`;\r\n  const SubtypeURL = `${BASE_URL}SubTupe/GetAllForService?siteServiceID=${AddType}`;\r\n\r\n  const fetchCitiesData = async () => {\r\n    const response = await fetch(cityURL);\r\n    const result = await response.json();\r\n    if (result) setCities(result.data[\"$values\"]);\r\n  };\r\n\r\n  const fetchSubTypesData = async () => {\r\n    const response = await fetch(SubtypeURL);\r\n    const result = await response.json();\r\n    if (result) setSubtypes(result.data[\"$values\"]);\r\n  };\r\n\r\n  const fetchData = () => {\r\n    setLoading(true);\r\n    axios\r\n      .get(\r\n        `${BASE_URL}Business/GetLatest?&page=${Page}&countryId=${cID}&cityId=${City}&serviceId=${AddType}&subType=${AddSubType}`\r\n      )\r\n      .then((res) => {\r\n        const fetchedData = [];\r\n        for (let key in res.data.data[\"$values\"]) {\r\n          fetchedData.push(res.data.data.$values[key]);\r\n        }\r\n        setAdds(fetchedData);\r\n        setLoading(false);\r\n      })\r\n      .catch((error) => {\r\n        console.log(error);\r\n        setLoading(false);\r\n      });\r\n  };\r\n\r\n  useEffect(() => {\r\n    fetchData();\r\n  }, [Page]);\r\n\r\n  useEffect(() => {\r\n    fetchCitiesData();\r\n  }, [cID]);\r\n\r\n  useEffect(() => {\r\n    fetchSubTypesData();\r\n  }, [AddType]);\r\n\r\n  return (\r\n    <Wrapper>\r\n      <PageTitle title={\"الدول\"} />\r\n\r\n      <div className=\"inputs\">\r\n        <select onChange={(e) => setAddType(e.target.value)} value={AddType}>\r\n          <option value=\"\" disabled hidden>\r\n            تصنيف الإعلان\r\n          </option>\r\n\r\n          {services.map((elem, index) => {\r\n            return (\r\n              <option key={index} value={elem.id}>\r\n                {elem.name}\r\n              </option>\r\n            );\r\n          })}\r\n        </select>\r\n\r\n        <select\r\n          onChange={(e) => setAddSubType(e.target.value)}\r\n          value={AddSubType}\r\n        >\r\n          <option value=\"\" disabled hidden>\r\n            التصنيف الفرعي للإعلان\r\n          </option>\r\n          {Subtypes.map((elem, index) => {\r\n            return (\r\n              <option key={index} value={elem.id}>\r\n                {elem.title}\r\n              </option>\r\n            );\r\n          })}\r\n        </select>\r\n\r\n        <select onChange={(e) => setCity(e.target.value)} value={City} required>\r\n          <option value=\"\" disabled hidden>\r\n            المدينة\r\n          </option>\r\n          {Cities.map((city, index) => {\r\n            return (\r\n              <option value={city.id} key={index}>\r\n                {city.cityName}\r\n              </option>\r\n            );\r\n          })}\r\n        </select>\r\n\r\n        <Btn onClick={fetchData}>بحث</Btn>\r\n      </div>\r\n\r\n      <Grid item lg={12} mt={5} mb={2}>\r\n        <Heading title={\"أحدث الإعلانات\"} />\r\n      </Grid>\r\n\r\n      <Grid\r\n        container\r\n        rowSpacing={2}\r\n        columnSpacing={2}\r\n        pr={0}\r\n        minHeight={\"400px\"}\r\n      >\r\n        {Loading ? (\r\n          <Spinner />\r\n        ) : Adds.length === 0 ? (\r\n          <h4\r\n            style={{\r\n              marginTop: \"20px\",\r\n            }}\r\n          >\r\n            لا توجد نتائج للبحث\r\n          </h4>\r\n        ) : (\r\n          Adds.map((elem, index) => {\r\n            return <Card key={index} card={elem} />;\r\n          })\r\n        )}\r\n      </Grid>\r\n\r\n      <Grid\r\n        container\r\n        direction=\"row\"\r\n        justifyContent=\"center\"\r\n        alignItems=\"center\"\r\n        m={3}\r\n      >\r\n        <BlueButton title={\"إظهار المزيد\"} setPage={setPage} page={Page} />\r\n      </Grid>\r\n    </Wrapper>\r\n  );\r\n};\r\n\r\nexport default CountriesAdds;\r\n"],"names":["Item","styled","card","navigate","useNavigate","item","lg","md","sm","xs","onClick","id","src","IMAGE_BASE_URL","image","alt","width","height","style","objectFit","objectPosition","borderRadius","cursor","name","Btn","title","type","setPage","page","Head","StyledSpan","fontWeight","marginLeft","color","Wrapper","services","useState","AddType","setAddType","AddSubType","setAddSubType","City","setCity","Adds","setAdds","Loading","setLoading","Page","Cities","setCities","Subtypes","setSubtypes","cID","useParams","cityURL","BASE_URL","SubtypeURL","fetchCitiesData","fetch","response","json","result","data","fetchSubTypesData","fetchData","axios","then","res","fetchedData","key","push","$values","catch","error","console","log","useEffect","className","onChange","e","target","value","disabled","hidden","map","elem","index","required","city","cityName","mt","mb","container","rowSpacing","columnSpacing","pr","minHeight","length","marginTop","direction","justifyContent","alignItems","m"],"sourceRoot":""}